# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# if .bashrc executed from .bash_profile do not do the job twice
[[ ${#BASH_SOURCE[@]} == 3 && ${BASH_SOURCE[2]} =~ "bash_profile" && ${BASH_SOURCE[1]} =~ "bashrc" ]] && return

# append to the history file, don't overwrite it
shopt -s histappend
# check the window size after each command and, if necessary, update the values of LINES and COLUMNS.
shopt -s checkwinsize
# correct minor errors in the spelling of a directory component in a cd command
shopt -s cdspell
# save all lines of a multiple-line command in the same history entry (allows easy re-editing of multi-line commands)
shopt -s cmdhist
shopt -s no_empty_cmd_completion

#disable Ctrl+s freeze
stty -ixon
# this is for delete words by ^W
tty -s && stty werase ^- 2>/dev/null

if [[ $OSTYPE =~ "linux" || $OSTYPE =~ "cygwin" ]]; then
	alias ls="ls --color=auto"
	alias duh='du -h --max-depth=0'
	alias free='free -m'

	alias tracert="sudo traceroute -I"
	alias tracert6="sudo traceroute6 -I"
	alias scan_scsi_="echo \"- - -\" > /sys/class/scsi_host/host0/scan"
elif [[ $OSTYPE =~ "freebsd" ]]; then
	#bsd colorize
	export CLICOLOR=1
	export LSCOLORS="ExGxFxdxCxDxDxhbadExEx"

	alias duh='du -h -d 0'
	alias llw='ls -liahW'

	alias tracert="traceroute -I"
	alias tracert6="traceroute6 -I"
fi

alias ll='ls -liahs'
alias rmrf='rm -rf'
alias cls="clear"
#alias :q="exit"
#alias ..="cd .."
alias killa9='killall -9'
alias kill9='kill -9'
alias ucfg_='. ~/.bash_local.lsig'
alias 'cd-'='cd -'

alias sudo='sudo ' #to respect all aliases

type iptraf >/dev/null 2>&1
[[ $? -eq 0 ]] && alias iptraf="TERM=linux iptraf"
type iptraf-ng >/dev/null 2>&1
[[ $? -eq 0 ]] && alias iptraf-ng="TERM=linux iptraf-ng"
type vimx >/dev/null 2>&1
[[ $? -eq 0 ]] && alias vim="vimx"

# User specific environment and startup programs
PATH=$PATH:$HOME/.local/bin:$HOME/bin
export PATH

# don't put duplicate lines in the history
export HISTCONTROL=ignoreboth,erasedups
# set history length
HISTFILESIZE=1000000000
HISTSIZE=1000000

# grep colorize
export GREP_OPTIONS="--color=auto"

export EDITOR="vim"

#X11 && X11Forwarding handling
if [[ -z $DISPLAY ]]; then
	[[ -n $SSH_TTY ]] && export DISPLAY="localhost:10.0" || export DISPLAY=":0"
fi
[[ -z $XAUTHORITY && -n $SSH_TTY ]] && export XAUTHORITY=$HOME/.Xauthority

# setup color variables
#color_is_on=
#color_red=
#color_green=
#color_yellow=
#color_blue=
#color_white=
#color_gray=
#color_bg_red=
#color_off=
#if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
#	color_is_on=true
#	color_red="$(/usr/bin/tput setaf 1)"
#	color_green="$(/usr/bin/tput setaf 2)"
#	color_yellow="$(/usr/bin/tput setaf 3)"
#	color_blue="$(/usr/bin/tput setaf 6)"
#	color_white="$(/usr/bin/tput setaf 7)"
#	color_gray="$(/usr/bin/tput setaf 8)"
#	color_off="$(/usr/bin/tput sgr0)"
#	color_error="$(/usr/bin/tput setab 1)$(/usr/bin/tput setaf 7)"
#	color_error_off="$(/usr/bin/tput sgr0)"
#fi

#some stuff
function md(){ mkdir -p "$@" && cd "$@"; }
[[ $OSTYPE =~ "cygwin" ]] || ps(){ /bin/ps "$@" -ww; }

function refresh_PS_ {
	local errcode=$?
	[ $errcode -ne 0 ] && errcode=" \e[37m[\e[31m$errcode\e[37m]" || errcode=""
	[[ -z $dlen_ ]] && dlen_=$(date +"%a, %d.%m.%y %T %z" | wc -m)
	if [[ -z $tty_ ]]; then
		tty_=$(tty)
		tty_="$$-${tty_/\/dev\//}"
	fi

	local ucolor="\e[32m"
	[[ "${USER}" == "root" ]] && ucolor="\e[31m"
	local hcolor="\e[32m"
	[[ -n $SSH_TTY && -z $is_local_ ]] && hcolor="\e[36m"
	local time="\e[$(($COLUMNS-$dlen_))G(\D{%a, %d.%m.%y %T %z})"
	local mainPrompt="[${ucolor}\u${hcolor}@\h:\e[33m\w\e[0m]$errcode \e[37m|$tty_| \e[0m($(($SHLVL-1)):\#)$time"
	local flen=${#mainPrompt}
	local termTitle=""
	[[ ($TERM != "linux") && !($TERM =~ "cons") ]] && termTitle="\[\e]0;[\u@\h:\w] $\a"
	export PS1="${termTitle}\n${mainPrompt}\n# "
}

function prompt_command_ {
	refresh_PS_
	if [[ $OSTYPE != "cygwin" && 0 -ne 0 ]]; then
		# get cursor position and add new line if we're not in first column
		exec < /dev/tty
		local OLDSTTY=$(stty -g)
		stty raw -echo min 0
		echo -en "\033[6n" > /dev/tty && read -sdR CURPOS
		stty $OLDSTTY
		[[ ${CURPOS##*;} -gt 1 ]] && echo "${color_error}â†µ${color_error_off}"
	fi
}
PROMPT_COMMAND=prompt_command_

if [ "$PS1" ]; then
	complete -cf sudo
fi

# bash local
ls -1 ~/.bash_local.lsig.* > /dev/null 2>&1
if [ $? -eq 0  ]; then
	for bash_local_ in ~/.bash_local.lsig.*; do . "$bash_local_"; done
fi

if [ -f ~/.bash_local ]; then
	. ~/.bash_local
fi

