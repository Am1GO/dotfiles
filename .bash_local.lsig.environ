#sync stuff
up_environ_(){
	if [[ $forbid_environ_up_ -gt 0 ]]; then
		echo "Environment update forbidden!" >&2
		return 1
	fi

	local cwd=$PWD rnd=$RANDOM rights="" dst=
	local src="https://www.lnetw.ru/environ.tar.bz2"
	local dst="lnetw_environ_$rnd.tar.bz2"

	cd ~
	if [[ $OSTYPE =~ "freebsd" ]]; then
		rights=$(stat -f '%p' ./ | rev | sed -E 's/([[:digit:]]{4}).*/\1/' | rev)
	else
		rights=$(stat -c '%a' ./)
	fi

	wget -c -O "$dst" "$src"
	if [ -s $dst ]; then
		tar jxfv "$dst" --no-same-permissions --no-same-owner
		. ~/.bash_local.lsig
		[[ -n $rights ]] && $(chmod $rights ./)
	else
		echo "Failed to retrieve $src" 1>&2
	fi

	[[ "$1" == "1" ]] && rm -f .bash_local.lsig.environ

	check_environ_in_ .bash_profile
	check_environ_in_ .bashrc

	[ -f "$dst" ] && rm -f "$dst"
	cd "$cwd"
}

deploy_environ_(){
	. ~/.bash_local.lsig
	echo "############################################"
	check_environ_
	echo "############################################"
	echo "deploying now to $1...
"
	local cwd=$PWD
	local build="BUILDROOT_$RANDOM"
	local dst="$1"
	local tmp="lnetw_environ_$lsig_env_ver_s_.tar.bz2"

	cd ~/
	rm -f "$tmp" 2>/dev/null
	mkdir $build
	echo "$lsig_filelist_" | xargs cp -a --target-directory=$build/
	chmod 700 $build
	chmod -st $build
	cd "$build"
	[[ "$2" == "0" ]] || echo "
#added by deploy_environ_
function up_environ_(){
	. ~/.bash_local.lsig
	check_environ_in_ ~/.bash_profile
	check_environ_in_ ~/.bashrc
}
$(type check_environ_in_ | tail -n +2)
" > .bash_local.lsig.environ
	if [[ "$3" == "0" ]]; then
		tar vcfj ../$tmp --exclude-vcs --owner=root --group=root ./
		cd ..
		scp -v $tmp $dst
		rm -f "$tmp"
	else
		scp -r ./ $dst
		cd ../
	fi
	rm -rf "$build/"
	cd "$cwd"
}

function check_environ_in_ {
	if [[ -z $1 ]]; then
		echo "$FUNCNAME requires filename not to be null" 1>&2
		return 1
	fi

	grep 'Lsig_Check1' "$1" >/dev/null 2>&1
	[ $? -eq 0 ] && return 0

	touch "$1"
	if [ $? -eq 0 ]; then
		local content="$(cat "$1" | grep -v Lsig_Check)"
		echo "$content
[ -f ~/.bash_local.lsig ] && . ~/.bash_local.lsig #Lsig_Check1
" > "$1"
	fi
	return $?
}

